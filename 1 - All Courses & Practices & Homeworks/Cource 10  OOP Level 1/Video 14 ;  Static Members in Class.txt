/*


                                Title :  Static Members


    1) If we do a static variable his life will stick until the all programme finished even if he was in a Function
       and hes period was done he still will be in the memory.

    2) If the variable is static inside the class that means he is sheared to all the object , the object do not
        creat a New Variable to each object . When a static variable (sheared) created he's sheared to all objects.

    3) However Static Member is a sheared vareable to all the objects , you can say like he is a globalle variable
        to all the objects of the class

    4) you can Initialize the static variable out side the class not inside the class .

    5) The static Variable you can access to it without creating Object just write the name of the class followed by
        tow '::' like this :  clsA::l;


*/


// ProgrammingAdvices.comÂ© Copyright 2022 Static Members
#include <iostream>
#include <string>
using namespace std;

class clsA
{
public:
    int var;
    static int counter;
    static short l;
    clsA()
    {
        counter++;
    }

    void Print()
    {
        cout << "\nvar     = " << var << endl;
        cout << "counter = " << counter << endl;
    }
};

// Static variable initialization outside the class
int clsA::counter = 0;
short clsA::l = 20;

int main()
{

    cout << clsA::l << endl;

    clsA A1, A2, A3;

    A1.var = 10;
    A2.var = 20;
    A3.var = 30;

    A1.Print();
    A2.Print();
    A3.Print();

    A1.counter = 500;
    cout << "\nafter changing the static member counter in one object:\n";

    A1.Print();
    A2.Print();
    A3.Print();

    return 0;
}

