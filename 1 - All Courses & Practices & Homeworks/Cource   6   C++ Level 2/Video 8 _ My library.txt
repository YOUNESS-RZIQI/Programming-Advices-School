#pragma once



#include <iostream>
#include <string>
#include <cstdlib>


using namespace std;

namespace Check_Lib
{

	enum en_Prime_of_Not { Prime, Not_Prime };

	en_Prime_of_Not Check_if_Prime___Num___Prime_Not(int Num)
	{

		int M = round(Num / 2);

		for (int Counter = 2; Counter <= M; Counter++)
		{

			if (Num % Counter == 0)
			{
				return en_Prime_of_Not::Not_Prime;
			}

		}

		return en_Prime_of_Not::Prime;

	}

	bool Check_Perfect_Number_or_Not___Num___True_or_False(int Num)
	{

		int Sum = 0;
		int B = Num / 2;

		for (int i = 1; i <= B; i++)
		{

			if (B % i == 0)
			{
				return false;
			}

		}

		return true;
	}

	int Reverse_Number__I__Num__O__Num(int Number)
	{


		int Remainder = 0, Number2 = 0;

		while (Number > 0)
		{

			Remainder = Number % 10;
			Number = Number / 10;

			Number2 = Number2 * 10 + Remainder;

		}

		return  Number2;

	}

	bool Is_Palindarom_Or_Not___I__Num___O___T_r_F(int Number)
	{
		int Oreginale = Number;

		int Remainder = 0, Number2 = 0;

		while (Number > 0)
		{

			Remainder = Number % 10;
			Number = Number / 10;

			Number2 = Number2 * 10 + Remainder;

		}


		return (Oreginale == Number2);

	}

	int Randam_Number_In_Range___I__From_To___O__Num(int From, int To)
	{

		int RandNum = rand() % (To - From + 1) + From;

		return RandNum;
	}

	int Number_Repition_In_Arr__I__NumToCheck_Arr_Length__O__Repition(int Num_to_Check, int Arr[30], int length)
	{

		int Counter = 0;

		for (int i = 0; i < length; i++)
		{

			if (Num_to_Check == Arr[i])
			{
				Counter++;
			}

		}

		return Counter;






	}





}
























#pragma once


#include <iostream>
#include <string>

using namespace std;

namespace Output_Lib
{

	void Print_Your_Name_is_First_Name_and_Last_Name(string First_Name , string Last_Name)
	{

		cout << " Your Name is :" << First_Name << " " << Last_Name ;

	}

	void Print_Array___Arr100_Length(int Arr[100], int length)
	{


		for (int i = 0; i < length; i++)
		{

			cout << Arr[i] << " ";

		}


	}

	void Print_Number(int Number)
	{

		cout << Number;

	}

	void Print_2_Numbers(int Num1 , int Num2)
	{

		cout << Num1 << " " << Num2 ;

	}


}

























#pragma once


#include <iostream>
#include <string>

using namespace std;

namespace Input_Lib
{

	string Ask_for_Name()
	{
		string Name;


		cout << "   Please enter your Name : ";
		getline(cin, Name);

		return Name;


	}


	void Read_First_Name_Then_You_Last_Name(string& First_Name , string& Last_Name)
	{
		 First_Name = " " , Last_Name = " ";

		cout << "Please enter your First Name : ";
		getline(cin, First_Name);

		cout << "Please enter your Last Name : ";
		getline(cin, Last_Name);

	}

	float Read_Number()
	{

		float Number;

		cout << "Please enter a number : ";
		cin >> Number;


		return  Number;
	}

	void Read_2_Numbers(float& Num1, float& Num2)
	{

		cout << "      Please Enter 2 Numbers : \n\n\n";

		cout << "Please enter Number 1 : ";
		cin >> Num1;

		cout << "Please enter Number 2 : ";
		cin >> Num2;

	}

	void Read_3_Numbers(float& Number1, float& Number2, float& Number3)
	{

		cout << "Please enter Number 1 : ";
		cin >> Number1;

		cout << "Please enter Number 2 : ";
		cin >> Number2;

		cout << "Please enter Number 3 : ";
		cin >> Number3;

	}

	int Read_Number_In_Range___Message_from_to(string Message, int From, int To)
	{

		int Number = 0;

		do
		{
			cout << Message;
			cin >> Number;

		} while (Number < From || Number > To);

		return Number;

	}

	int Read_Positive_Number___Message(string Massege)
	{

		int Number = 0;

		do
		{

			cout << Massege;
			cin >> Number;
			cout << endl;


		} while (Number <= 0);


		return Number;
	}







}







