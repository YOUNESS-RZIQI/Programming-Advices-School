#include <iostream>
#include <ctime>
using namespace std;

struct stDate {
    short Year;
    short Month;
    short Day;
};

bool IsDate1BeforeDate2(stDate Date1, stDate Date2) {
    return (Date1.Year < Date2.Year) ? true :
        ((Date1.Year == Date2.Year) ?
            (Date1.Month < Date2.Month ? true :
                (Date1.Month == Date2.Month ? Date1.Day < Date2.Day : false))
            : false);
}


bool isLeapYear(short Year) {
    return (Year % 4 == 0 && Year % 100 != 0) || (Year % 400 == 0);
}

short NumberOfDaysInAMonth(short Month, short Year) {
    if (Month < 1 || Month > 12)
        return 0;
    int days[12] = { 31,28,31,30,31,30,31,31,30,31,30,31 };
    return (Month == 2) ? (isLeapYear(Year) ? 29 : 28) : days[Month - 1];
}

bool IsLastDayInMonth(stDate Date) {
    return (Date.Day == NumberOfDaysInAMonth(Date.Month, Date.Year));
}

bool IsFirstDayInMonth(stDate Date)
{
    return (Date.Day == 1 );
}

bool IsFirstMonthInYear(short Month) {
    return (Month == 1);
}


bool IsLastMonthInYear(short Month) {
    return (Month == 12);
}



short ReadDay() {
    short Day;
    cout << "\nPlease enter a Day? ";
    cin >> Day;
    return Day;
}

short ReadMonth() {
    short Month;
    cout << "Please enter a Month? ";
    cin >> Month;
    return Month;
}

short ReadYear() {
    short Year;
    cout << "Please enter a Year? ";
    cin >> Year;
    return Year;
}

stDate ReadFullDate() {
    stDate Date;
    Date.Day = ReadDay();
    Date.Month = ReadMonth();
    Date.Year = ReadYear();
    return Date;
}




stDate DecreaseDateByOneDay(stDate  Date) {


    if (IsFirstDayInMonth(Date)) {

        if (IsFirstMonthInYear(Date.Month))
        {
            Date.Month = 12;
            Date.Year--;
            Date.Day = NumberOfDaysInAMonth(12,Date.Year);
        }
        else
        {
            Date.Month--;
            short Days_Number = NumberOfDaysInAMonth(Date.Month , Date.Year);
            Date.Day = Days_Number;
        }

    }
    else
    {
        Date.Day--;
    }

    return Date;
}

stDate DecreaseDateByXDays(short Days ,stDate  Date)
{
    for (short i = 0; i < Days; i++)
    {
       Date = DecreaseDateByOneDay(Date);
    }
    return Date;
}

stDate Decrease_Date_By_One_Week(stDate  Date)
{
    for (short i = 0; i < 7; i++)
    {
        Date = DecreaseDateByOneDay(Date);
    }
    return Date;
}

stDate Decrease_Date_By_X_Weeks(short Weeks ,stDate  Date)
{
    for (short i = 0; i < Weeks; i++)
    {
        Date = Decrease_Date_By_One_Week(Date);
    }
    return Date;
}

stDate Decrease_Date_By_One_Month(stDate  Date)
{

    if (IsFirstMonthInYear(Date.Month))
    {
        Date.Month = 12;
        Date.Year--;
    }
    else
    {
        Date.Month--;
    }

    short Days_Number = NumberOfDaysInAMonth(Date.Month, Date.Day);
    if (Date.Day > Days_Number)
        Date.Day = Days_Number;

    return Date;
}

stDate Decrease_Date_By_X_Months(short Months ,stDate Date)
{

    for (short i = 0; i < Months; i++)
    {
        Date = Decrease_Date_By_One_Month(Date);
    }
    return Date;
}

stDate Decrease_Date_By_One_Year(stDate Date)
{

    Date.Year -= 1;
    return Date;
}

stDate Decrease_Date_By_X_Year(short Years ,stDate Date)
{
    stDate old_Date = Date;

    for (short i = 0; i < Years; i++)
    {
        Date = Decrease_Date_By_One_Year(Date);
    }

    
    return Date;
}

stDate Decrease_Date_By_X_Year___Faster(short Years ,stDate Date)
{
    Date.Year -=  Years;
    return Date;
}

stDate Decrease_Date_By_One_Decade(stDate Date)
{
    Date.Year -= 10;
    return Date;
}

stDate Decrease_Date_By_X_Decades(short Decades,stDate Date)
{
    for (short i = 0; i < Decades; i++)
    {
       Date = Decrease_Date_By_One_Decade(Date);
    }

    return Date;
}

stDate Decrease_Date_By_X_Decades___Faster(short Decades,stDate Date)
{
    Date.Year -= Decades * 10;

    return Date;
}

stDate Decrease_Date_By_One_Century(stDate Date)
{
    Date.Year -= 100;
    return Date;
}

stDate Decrease_Date_By_One_Millennuim(stDate Date)
{
    Date.Year -= 1000;
    return Date;
}



int main()
{

    cout << "\nPlease Enter The Date :\n";
    stDate Date = ReadFullDate();


    cout << "\n\n\nDate after : \n\n\n";

    Date = DecreaseDateByOneDay(Date);
    cout << "Date after Decrease one Day                 : " << Date.Day << "/" << Date.Month << "/" << Date.Year << endl;

    Date = DecreaseDateByXDays(10,Date);
    cout << "Date after Decrease 10  Day                 : " << Date.Day << "/" << Date.Month << "/" << Date.Year << endl;
    
    Date = Decrease_Date_By_One_Week(Date);
    cout << "Date after Decrease One Week                : " << Date.Day << "/" << Date.Month << "/" << Date.Year << endl;
    
    Date = Decrease_Date_By_X_Weeks(10,Date);
    cout << "Date after Decrease 10  Week                : " << Date.Day << "/" << Date.Month << "/" << Date.Year << endl;
     
    Date = Decrease_Date_By_One_Month(Date);
    cout << "Date after Decrease One Month               : " << Date.Day << "/" << Date.Month << "/" << Date.Year << endl;
       
    Date = Decrease_Date_By_X_Months(5,Date);
    cout << "Date after Decrease  5 Months               : " << Date.Day << "/" << Date.Month << "/" << Date.Year << endl;
        
    Date = Decrease_Date_By_One_Year(Date);
    cout << "Date after Decrease  One Year               : " << Date.Day << "/" << Date.Month << "/" << Date.Year << endl;
    
    Date = Decrease_Date_By_X_Year(10,Date);
    cout << "Date after Decrease  10 Years               : " << Date.Day << "/" << Date.Month << "/" << Date.Year << endl;
    
    Date = Decrease_Date_By_X_Year___Faster(10,Date);
    cout << "Date after Decrease  10 Years   ( Faster )  : " << Date.Day << "/" << Date.Month << "/" << Date.Year << endl;
    
    Date = Decrease_Date_By_One_Decade(Date);
    cout << "Date after Decrease  1 Decade               : " << Date.Day << "/" << Date.Month << "/" << Date.Year << endl;
    
    Date = Decrease_Date_By_X_Decades(10,Date);
    cout << "Date after Decrease 10 Decades              : " << Date.Day << "/" << Date.Month << "/" << Date.Year << endl;
    
    
    Date = Decrease_Date_By_X_Decades___Faster(10 ,Date);
    cout << "Date after Decrease  10 Decades ( Faster )  : " << Date.Day << "/" << Date.Month << "/" << Date.Year << endl;
    
    Date = Decrease_Date_By_One_Century(Date);
    cout << "Date after Decrease  One Century            : " << Date.Day << " / " << Date.Month << " / " << Date.Year << endl;
     
    Date = Decrease_Date_By_One_Millennuim(Date);
    cout << "Date after Decrease  One Millennuim         : " << Date.Day << "/" << Date.Month << "/" << Date.Year << endl;







    system("pause>0");
    return 0;
}
