#include <iostream>
#include <cstdlib>
using namespace std;



int Enter_Positive_Number()
{

	int Number = 0;

	do
	{

		cout << "Please enter the Number you Want to add to Array : ";
		cin >> Number;
		cout << endl;


	} while (Number <= 0);


	return Number;
}

int Randam_Number_In_Range(int From, int To)
{
	int RandNum = rand() % (To - From + 1) + From;
	return RandNum;
}

void Print_Array(int Arr_Source[100], int Arr_Source_Length)
{


	for (int i = 0; i < Arr_Source_Length; i++)
	{

		cout << Arr_Source[i] << " ";

	}

	cout << endl;


}



enum en_Prime_of_Not { Prime, Not_Prime };

en_Prime_of_Not Check_if_Prime(int Num)
{

	int M = round(Num / 2);

	for (int Counter = 2; Counter <= M; Counter++)
	{

		if (Num % Counter == 0)
		{
			return en_Prime_of_Not::Not_Prime;
		}

	}

	return en_Prime_of_Not::Prime;

}




void Fill_Array_with_N_Randum_Number(int Arr_Source[100], int& Arr_Source_Length)
{

	Arr_Source_Length = Enter_Positive_Number();


	for (int i = 0; i < Arr_Source_Length; i++)
	{

		Arr_Source[i] = Randam_Number_In_Range(1, 100);

	}

}

void Add_Array_Element(int UserNumber, int Arr_Source[100], int& Arr_Source_Length)
{

	Arr_Source_Length++;
	
	Arr_Source[Arr_Source_Length - 1] = UserNumber;

}

void Copye_Only_Prime_Number( int Arr_Source[100], int Arr_Copye[100], int Arr_Source_Length , int & Arr_Coype_Length)
{

	for ( int i = 0 ; i < Arr_Source_Length; i++)
	{
		if (Check_if_Prime(Arr_Source[i]) == en_Prime_of_Not::Prime)
		{
			Add_Array_Element(Arr_Source[i], Arr_Copye, Arr_Coype_Length);
		}

	}

}



int main()
{

	srand((unsigned)time(NULL));

	int Arr[100] ;
	int ArrLength = 0;
	

	Fill_Array_with_N_Randum_Number(Arr , ArrLength);
	cout << endl;


	cout << " Array 1 : \n";
	Print_Array(Arr, ArrLength);
	cout << endl;


	int Arr2[100];
	int Arr2Length = 0 ;

	
	Copye_Only_Prime_Number(Arr, Arr2, ArrLength, Arr2Length);

	cout << " Array 2 Prime Numbers Onlye  : \n";
	Print_Array(Arr2, Arr2Length);
	cout << endl;

	return 0;
}